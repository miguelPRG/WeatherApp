name: Test CI Pipeline

on: 
  push:
    branches: [ main, develop, feature/*, bugfix/*, hotfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  install-in-cache-and-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install backend dependencies
        run: |
          cd backend
          npm install && npm prune

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install && npm prune

      - name: Audit backend dependencies
        run: |
          cd backend
          npm audit --audit-level=moderate

      - name: Audit frontend dependencies
        run: |
          cd frontend
          npm audit --audit-level=moderate

  test-frontend:
    runs-on: ubuntu-latest
    needs: install-in-cache-and-audit
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'

      - name: Restore frontend dependencies cache
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test
    
  build-app:
    runs-on: ubuntu-latest
    needs: test-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-
      
      - name: Stop backend if running
        run: |
          if pgrep -f "node.*server" > /dev/null; then
            echo "Backend found, stopping..."
            if ! pkill -f "node.*server"; then
              echo "Error stopping backend!" >&2
              exit 1
            fi
          else
            echo "Backend not running. Skipping stop."
          fi
      - name: Restore frontend dependencies cache
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-
      
      - name: Build frontend application
        run: |
          cd frontend
          npm run build